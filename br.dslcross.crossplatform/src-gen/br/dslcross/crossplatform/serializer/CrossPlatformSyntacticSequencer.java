/*
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.serializer;

import br.dslcross.crossplatform.services.CrossPlatformGrammarAccess;
import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class CrossPlatformSyntacticSequencer extends AbstractSyntacticSequencer {

	protected CrossPlatformGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Attribute_LeftSquareBracketKeyword_4_q;
	protected AbstractElementAlias match_Attribute_RightSquareBracketKeyword_6_q;
	protected AbstractElementAlias match_DataType_LeftSquareBracketKeyword_2_q;
	protected AbstractElementAlias match_DataType_RightSquareBracketKeyword_4_q;
	protected AbstractElementAlias match_ExprL_FullStopKeyword_0_1_1_1_q;
	protected AbstractElementAlias match_MethodCallCmd___LeftParenthesisKeyword_1_2_0_RightParenthesisKeyword_1_2_2__a;
	protected AbstractElementAlias match_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__a;
	protected AbstractElementAlias match_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__p;
	protected AbstractElementAlias match_OperationGlobCall___LeftCurlyBracketKeyword_12_0_RightCurlyBracketKeyword_12_2__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (CrossPlatformGrammarAccess) access;
		match_Attribute_LeftSquareBracketKeyword_4_q = new TokenAlias(false, true, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_4());
		match_Attribute_RightSquareBracketKeyword_6_q = new TokenAlias(false, true, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_6());
		match_DataType_LeftSquareBracketKeyword_2_q = new TokenAlias(false, true, grammarAccess.getDataTypeAccess().getLeftSquareBracketKeyword_2());
		match_DataType_RightSquareBracketKeyword_4_q = new TokenAlias(false, true, grammarAccess.getDataTypeAccess().getRightSquareBracketKeyword_4());
		match_ExprL_FullStopKeyword_0_1_1_1_q = new TokenAlias(false, true, grammarAccess.getExprLAccess().getFullStopKeyword_0_1_1_1());
		match_MethodCallCmd___LeftParenthesisKeyword_1_2_0_RightParenthesisKeyword_1_2_2__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getMethodCallCmdAccess().getLeftParenthesisKeyword_1_2_0()), new TokenAlias(false, false, grammarAccess.getMethodCallCmdAccess().getRightParenthesisKeyword_1_2_2()));
		match_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getMethodCallCmdAccess().getRightParenthesisKeyword_1_2_2()), new TokenAlias(false, false, grammarAccess.getMethodCallCmdAccess().getLeftParenthesisKeyword_1_2_0()));
		match_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getMethodCallCmdAccess().getRightParenthesisKeyword_1_2_2()), new TokenAlias(false, false, grammarAccess.getMethodCallCmdAccess().getLeftParenthesisKeyword_1_2_0()));
		match_OperationGlobCall___LeftCurlyBracketKeyword_12_0_RightCurlyBracketKeyword_12_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getOperationGlobCallAccess().getLeftCurlyBracketKeyword_12_0()), new TokenAlias(false, false, grammarAccess.getOperationGlobCallAccess().getRightCurlyBracketKeyword_12_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Attribute_LeftSquareBracketKeyword_4_q.equals(syntax))
				emit_Attribute_LeftSquareBracketKeyword_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Attribute_RightSquareBracketKeyword_6_q.equals(syntax))
				emit_Attribute_RightSquareBracketKeyword_6_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DataType_LeftSquareBracketKeyword_2_q.equals(syntax))
				emit_DataType_LeftSquareBracketKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DataType_RightSquareBracketKeyword_4_q.equals(syntax))
				emit_DataType_RightSquareBracketKeyword_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExprL_FullStopKeyword_0_1_1_1_q.equals(syntax))
				emit_ExprL_FullStopKeyword_0_1_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MethodCallCmd___LeftParenthesisKeyword_1_2_0_RightParenthesisKeyword_1_2_2__a.equals(syntax))
				emit_MethodCallCmd___LeftParenthesisKeyword_1_2_0_RightParenthesisKeyword_1_2_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__a.equals(syntax))
				emit_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__p.equals(syntax))
				emit_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_OperationGlobCall___LeftCurlyBracketKeyword_12_0_RightCurlyBracketKeyword_12_2__q.equals(syntax))
				emit_OperationGlobCall___LeftCurlyBracketKeyword_12_0_RightCurlyBracketKeyword_12_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     '['?
	 *
	 * This ambiguous syntax occurs at:
	 *     type=[Type|ID] (ambiguity) ']'? '<' concreteTypes+=[Type|ID]
	 *     type=[Type|ID] (ambiguity) ']'? (rule end)
	 *     type=[Type|ID] (ambiguity) arrayAllow=INT
	 */
	protected void emit_Attribute_LeftSquareBracketKeyword_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ']'?
	 *
	 * This ambiguous syntax occurs at:
	 *     arrayAllow=INT (ambiguity) '<' concreteTypes+=[Type|ID]
	 *     arrayAllow=INT (ambiguity) (rule end)
	 *     type=[Type|ID] '['? (ambiguity) '<' concreteTypes+=[Type|ID]
	 *     type=[Type|ID] '['? (ambiguity) (rule end)
	 */
	protected void emit_Attribute_RightSquareBracketKeyword_6_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '['?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) ']'? '<' genericTypes+=DSLGenericType
	 *     name=ID (ambiguity) ']'? (rule end)
	 *     name=ID (ambiguity) array=INT
	 */
	protected void emit_DataType_LeftSquareBracketKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ']'?
	 *
	 * This ambiguous syntax occurs at:
	 *     array=INT (ambiguity) '<' genericTypes+=DSLGenericType
	 *     array=INT (ambiguity) (rule end)
	 *     name=ID '['? (ambiguity) '<' genericTypes+=DSLGenericType
	 *     name=ID '['? (ambiguity) (rule end)
	 */
	protected void emit_DataType_RightSquareBracketKeyword_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '.'?
	 *
	 * This ambiguous syntax occurs at:
	 *     i=INT (ambiguity) (rule end)
	 *     i=INT (ambiguity) iD=INT
	 */
	protected void emit_ExprL_FullStopKeyword_0_1_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')')*
	 *
	 * This ambiguous syntax occurs at:
	 *     args+=AttributeCall ')' (ambiguity) '.' call+=ID
	 *     args+=AttributeCall ')' (ambiguity) (rule end)
	 *     call+=ID (ambiguity) '.' call+=ID
	 *     call+=ID (ambiguity) (rule end)
	 */
	protected void emit_MethodCallCmd___LeftParenthesisKeyword_1_2_0_RightParenthesisKeyword_1_2_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (')' '(')*
	 *
	 * This ambiguous syntax occurs at:
	 *     call+=ID '(' (ambiguity) args+=AttributeCall
	 */
	protected void emit_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (')' '(')+
	 *
	 * This ambiguous syntax occurs at:
	 *     args+=AttributeCall (ambiguity) args+=AttributeCall
	 */
	protected void emit_MethodCallCmd___RightParenthesisKeyword_1_2_2_LeftParenthesisKeyword_1_2_0__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     array=INT (ambiguity) (rule end)
	 *     col1='[' (ambiguity) (rule end)
	 *     col2=']' (ambiguity) (rule end)
	 *     genericTypesDecl=[Type|ID] '>' (ambiguity) (rule end)
	 *     opGlobCall=[Global|ID] '(' ')' (ambiguity) (rule end)
	 *     params+=Parameter ')' (ambiguity) (rule end)
	 *     typeGlobal=DSLTypeRef (ambiguity) (rule end)
	 */
	protected void emit_OperationGlobCall___LeftCurlyBracketKeyword_12_0_RightCurlyBracketKeyword_12_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
