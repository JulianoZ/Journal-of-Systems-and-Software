/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.AttribID;
import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.ExprL;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expr L</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getV <em>V</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getCol1 <em>Col1</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getArray <em>Array</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getCol2 <em>Col2</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getI <em>I</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getID <em>ID</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getVAtr1 <em>VAtr1</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getVAtr2 <em>VAtr2</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getStrVar <em>Str Var</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLImpl#getOpLog <em>Op Log</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExprLImpl extends MinimalEObjectImpl.Container implements ExprL
{
  /**
   * The default value of the '{@link #getV() <em>V</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getV()
   * @generated
   * @ordered
   */
  protected static final String V_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getV() <em>V</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getV()
   * @generated
   * @ordered
   */
  protected String v = V_EDEFAULT;

  /**
   * The default value of the '{@link #getCol1() <em>Col1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol1()
   * @generated
   * @ordered
   */
  protected static final String COL1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCol1() <em>Col1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol1()
   * @generated
   * @ordered
   */
  protected String col1 = COL1_EDEFAULT;

  /**
   * The default value of the '{@link #getArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected static final int ARRAY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected int array = ARRAY_EDEFAULT;

  /**
   * The default value of the '{@link #getCol2() <em>Col2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol2()
   * @generated
   * @ordered
   */
  protected static final String COL2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCol2() <em>Col2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol2()
   * @generated
   * @ordered
   */
  protected String col2 = COL2_EDEFAULT;

  /**
   * The default value of the '{@link #getI() <em>I</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getI()
   * @generated
   * @ordered
   */
  protected static final int I_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getI() <em>I</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getI()
   * @generated
   * @ordered
   */
  protected int i = I_EDEFAULT;

  /**
   * The default value of the '{@link #getID() <em>ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getID()
   * @generated
   * @ordered
   */
  protected static final int ID_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getID() <em>ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getID()
   * @generated
   * @ordered
   */
  protected int iD = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getVAtr1() <em>VAtr1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVAtr1()
   * @generated
   * @ordered
   */
  protected static final String VATR1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVAtr1() <em>VAtr1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVAtr1()
   * @generated
   * @ordered
   */
  protected String vAtr1 = VATR1_EDEFAULT;

  /**
   * The cached value of the '{@link #getVAtr2() <em>VAtr2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVAtr2()
   * @generated
   * @ordered
   */
  protected EList<AttribID> vAtr2;

  /**
   * The default value of the '{@link #getStrVar() <em>Str Var</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrVar()
   * @generated
   * @ordered
   */
  protected static final String STR_VAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStrVar() <em>Str Var</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrVar()
   * @generated
   * @ordered
   */
  protected String strVar = STR_VAR_EDEFAULT;

  /**
   * The default value of the '{@link #getOpLog() <em>Op Log</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpLog()
   * @generated
   * @ordered
   */
  protected static final String OP_LOG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOpLog() <em>Op Log</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpLog()
   * @generated
   * @ordered
   */
  protected String opLog = OP_LOG_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExprLImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.EXPR_L;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getV()
  {
    return v;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setV(String newV)
  {
    String oldV = v;
    v = newV;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__V, oldV, v));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCol1()
  {
    return col1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCol1(String newCol1)
  {
    String oldCol1 = col1;
    col1 = newCol1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__COL1, oldCol1, col1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getArray()
  {
    return array;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArray(int newArray)
  {
    int oldArray = array;
    array = newArray;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__ARRAY, oldArray, array));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCol2()
  {
    return col2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCol2(String newCol2)
  {
    String oldCol2 = col2;
    col2 = newCol2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__COL2, oldCol2, col2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getI()
  {
    return i;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setI(int newI)
  {
    int oldI = i;
    i = newI;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__I, oldI, i));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getID()
  {
    return iD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setID(int newID)
  {
    int oldID = iD;
    iD = newID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__ID, oldID, iD));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVAtr1()
  {
    return vAtr1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVAtr1(String newVAtr1)
  {
    String oldVAtr1 = vAtr1;
    vAtr1 = newVAtr1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__VATR1, oldVAtr1, vAtr1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AttribID> getVAtr2()
  {
    if (vAtr2 == null)
    {
      vAtr2 = new EObjectContainmentEList<AttribID>(AttribID.class, this, CrossPlatformPackage.EXPR_L__VATR2);
    }
    return vAtr2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStrVar()
  {
    return strVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStrVar(String newStrVar)
  {
    String oldStrVar = strVar;
    strVar = newStrVar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__STR_VAR, oldStrVar, strVar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOpLog()
  {
    return opLog;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOpLog(String newOpLog)
  {
    String oldOpLog = opLog;
    opLog = newOpLog;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_L__OP_LOG, oldOpLog, opLog));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_L__VATR2:
        return ((InternalEList<?>)getVAtr2()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_L__V:
        return getV();
      case CrossPlatformPackage.EXPR_L__COL1:
        return getCol1();
      case CrossPlatformPackage.EXPR_L__ARRAY:
        return getArray();
      case CrossPlatformPackage.EXPR_L__COL2:
        return getCol2();
      case CrossPlatformPackage.EXPR_L__I:
        return getI();
      case CrossPlatformPackage.EXPR_L__ID:
        return getID();
      case CrossPlatformPackage.EXPR_L__VATR1:
        return getVAtr1();
      case CrossPlatformPackage.EXPR_L__VATR2:
        return getVAtr2();
      case CrossPlatformPackage.EXPR_L__STR_VAR:
        return getStrVar();
      case CrossPlatformPackage.EXPR_L__OP_LOG:
        return getOpLog();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_L__V:
        setV((String)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__COL1:
        setCol1((String)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__ARRAY:
        setArray((Integer)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__COL2:
        setCol2((String)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__I:
        setI((Integer)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__ID:
        setID((Integer)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__VATR1:
        setVAtr1((String)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__VATR2:
        getVAtr2().clear();
        getVAtr2().addAll((Collection<? extends AttribID>)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__STR_VAR:
        setStrVar((String)newValue);
        return;
      case CrossPlatformPackage.EXPR_L__OP_LOG:
        setOpLog((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_L__V:
        setV(V_EDEFAULT);
        return;
      case CrossPlatformPackage.EXPR_L__COL1:
        setCol1(COL1_EDEFAULT);
        return;
      case CrossPlatformPackage.EXPR_L__ARRAY:
        setArray(ARRAY_EDEFAULT);
        return;
      case CrossPlatformPackage.EXPR_L__COL2:
        setCol2(COL2_EDEFAULT);
        return;
      case CrossPlatformPackage.EXPR_L__I:
        setI(I_EDEFAULT);
        return;
      case CrossPlatformPackage.EXPR_L__ID:
        setID(ID_EDEFAULT);
        return;
      case CrossPlatformPackage.EXPR_L__VATR1:
        setVAtr1(VATR1_EDEFAULT);
        return;
      case CrossPlatformPackage.EXPR_L__VATR2:
        getVAtr2().clear();
        return;
      case CrossPlatformPackage.EXPR_L__STR_VAR:
        setStrVar(STR_VAR_EDEFAULT);
        return;
      case CrossPlatformPackage.EXPR_L__OP_LOG:
        setOpLog(OP_LOG_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_L__V:
        return V_EDEFAULT == null ? v != null : !V_EDEFAULT.equals(v);
      case CrossPlatformPackage.EXPR_L__COL1:
        return COL1_EDEFAULT == null ? col1 != null : !COL1_EDEFAULT.equals(col1);
      case CrossPlatformPackage.EXPR_L__ARRAY:
        return array != ARRAY_EDEFAULT;
      case CrossPlatformPackage.EXPR_L__COL2:
        return COL2_EDEFAULT == null ? col2 != null : !COL2_EDEFAULT.equals(col2);
      case CrossPlatformPackage.EXPR_L__I:
        return i != I_EDEFAULT;
      case CrossPlatformPackage.EXPR_L__ID:
        return iD != ID_EDEFAULT;
      case CrossPlatformPackage.EXPR_L__VATR1:
        return VATR1_EDEFAULT == null ? vAtr1 != null : !VATR1_EDEFAULT.equals(vAtr1);
      case CrossPlatformPackage.EXPR_L__VATR2:
        return vAtr2 != null && !vAtr2.isEmpty();
      case CrossPlatformPackage.EXPR_L__STR_VAR:
        return STR_VAR_EDEFAULT == null ? strVar != null : !STR_VAR_EDEFAULT.equals(strVar);
      case CrossPlatformPackage.EXPR_L__OP_LOG:
        return OP_LOG_EDEFAULT == null ? opLog != null : !OP_LOG_EDEFAULT.equals(opLog);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (v: ");
    result.append(v);
    result.append(", col1: ");
    result.append(col1);
    result.append(", array: ");
    result.append(array);
    result.append(", col2: ");
    result.append(col2);
    result.append(", i: ");
    result.append(i);
    result.append(", iD: ");
    result.append(iD);
    result.append(", vAtr1: ");
    result.append(vAtr1);
    result.append(", strVar: ");
    result.append(strVar);
    result.append(", opLog: ");
    result.append(opLog);
    result.append(')');
    return result.toString();
  }

} //ExprLImpl
