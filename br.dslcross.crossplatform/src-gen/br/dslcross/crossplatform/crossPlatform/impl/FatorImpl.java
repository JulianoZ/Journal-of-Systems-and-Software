/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.AttribID;
import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.ExprArit;
import br.dslcross.crossplatform.crossPlatform.ExprL;
import br.dslcross.crossplatform.crossPlatform.Fator;
import br.dslcross.crossplatform.crossPlatform.MethodCallGlob;
import br.dslcross.crossplatform.crossPlatform.MethodCallOp;
import br.dslcross.crossplatform.crossPlatform.Parameter;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getP <em>P</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getV <em>V</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getCol1 <em>Col1</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getArray <em>Array</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getArray2 <em>Array2</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getCol2 <em>Col2</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getD <em>D</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getStrVar <em>Str Var</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getMcOperation <em>Mc Operation</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getMcGlobal <em>Mc Global</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getExpr <em>Expr</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getVAtr1 <em>VAtr1</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getVAtr2 <em>VAtr2</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getCol <em>Col</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FatorImpl extends MinimalEObjectImpl.Container implements Fator
{
  /**
   * The cached value of the '{@link #getP() <em>P</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getP()
   * @generated
   * @ordered
   */
  protected Parameter p;

  /**
   * The default value of the '{@link #getV() <em>V</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getV()
   * @generated
   * @ordered
   */
  protected static final String V_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getV() <em>V</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getV()
   * @generated
   * @ordered
   */
  protected String v = V_EDEFAULT;

  /**
   * The default value of the '{@link #getCol1() <em>Col1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol1()
   * @generated
   * @ordered
   */
  protected static final String COL1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCol1() <em>Col1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol1()
   * @generated
   * @ordered
   */
  protected String col1 = COL1_EDEFAULT;

  /**
   * The default value of the '{@link #getArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected static final int ARRAY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected int array = ARRAY_EDEFAULT;

  /**
   * The default value of the '{@link #getArray2() <em>Array2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray2()
   * @generated
   * @ordered
   */
  protected static final String ARRAY2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArray2() <em>Array2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray2()
   * @generated
   * @ordered
   */
  protected String array2 = ARRAY2_EDEFAULT;

  /**
   * The default value of the '{@link #getCol2() <em>Col2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol2()
   * @generated
   * @ordered
   */
  protected static final String COL2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCol2() <em>Col2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol2()
   * @generated
   * @ordered
   */
  protected String col2 = COL2_EDEFAULT;

  /**
   * The default value of the '{@link #getD() <em>D</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getD()
   * @generated
   * @ordered
   */
  protected static final String D_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getD() <em>D</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getD()
   * @generated
   * @ordered
   */
  protected String d = D_EDEFAULT;

  /**
   * The default value of the '{@link #getStrVar() <em>Str Var</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrVar()
   * @generated
   * @ordered
   */
  protected static final String STR_VAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStrVar() <em>Str Var</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStrVar()
   * @generated
   * @ordered
   */
  protected String strVar = STR_VAR_EDEFAULT;

  /**
   * The cached value of the '{@link #getMcOperation() <em>Mc Operation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMcOperation()
   * @generated
   * @ordered
   */
  protected MethodCallOp mcOperation;

  /**
   * The cached value of the '{@link #getMcGlobal() <em>Mc Global</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMcGlobal()
   * @generated
   * @ordered
   */
  protected MethodCallGlob mcGlobal;

  /**
   * The cached value of the '{@link #getExpr() <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr()
   * @generated
   * @ordered
   */
  protected ExprArit expr;

  /**
   * The cached value of the '{@link #getVAtr1() <em>VAtr1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVAtr1()
   * @generated
   * @ordered
   */
  protected AttribID vAtr1;

  /**
   * The cached value of the '{@link #getVAtr2() <em>VAtr2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVAtr2()
   * @generated
   * @ordered
   */
  protected EList<AttribID> vAtr2;

  /**
   * The cached value of the '{@link #getCol() <em>Col</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol()
   * @generated
   * @ordered
   */
  protected EList<String> col;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected EList<ExprL> value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FatorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.FATOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Parameter getP()
  {
    return p;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetP(Parameter newP, NotificationChain msgs)
  {
    Parameter oldP = p;
    p = newP;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__P, oldP, newP);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setP(Parameter newP)
  {
    if (newP != p)
    {
      NotificationChain msgs = null;
      if (p != null)
        msgs = ((InternalEObject)p).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__P, null, msgs);
      if (newP != null)
        msgs = ((InternalEObject)newP).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__P, null, msgs);
      msgs = basicSetP(newP, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__P, newP, newP));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getV()
  {
    return v;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setV(String newV)
  {
    String oldV = v;
    v = newV;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__V, oldV, v));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCol1()
  {
    return col1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCol1(String newCol1)
  {
    String oldCol1 = col1;
    col1 = newCol1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__COL1, oldCol1, col1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getArray()
  {
    return array;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArray(int newArray)
  {
    int oldArray = array;
    array = newArray;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__ARRAY, oldArray, array));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArray2()
  {
    return array2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArray2(String newArray2)
  {
    String oldArray2 = array2;
    array2 = newArray2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__ARRAY2, oldArray2, array2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCol2()
  {
    return col2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCol2(String newCol2)
  {
    String oldCol2 = col2;
    col2 = newCol2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__COL2, oldCol2, col2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getD()
  {
    return d;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setD(String newD)
  {
    String oldD = d;
    d = newD;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__D, oldD, d));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStrVar()
  {
    return strVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStrVar(String newStrVar)
  {
    String oldStrVar = strVar;
    strVar = newStrVar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__STR_VAR, oldStrVar, strVar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodCallOp getMcOperation()
  {
    return mcOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMcOperation(MethodCallOp newMcOperation, NotificationChain msgs)
  {
    MethodCallOp oldMcOperation = mcOperation;
    mcOperation = newMcOperation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__MC_OPERATION, oldMcOperation, newMcOperation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMcOperation(MethodCallOp newMcOperation)
  {
    if (newMcOperation != mcOperation)
    {
      NotificationChain msgs = null;
      if (mcOperation != null)
        msgs = ((InternalEObject)mcOperation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__MC_OPERATION, null, msgs);
      if (newMcOperation != null)
        msgs = ((InternalEObject)newMcOperation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__MC_OPERATION, null, msgs);
      msgs = basicSetMcOperation(newMcOperation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__MC_OPERATION, newMcOperation, newMcOperation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodCallGlob getMcGlobal()
  {
    return mcGlobal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMcGlobal(MethodCallGlob newMcGlobal, NotificationChain msgs)
  {
    MethodCallGlob oldMcGlobal = mcGlobal;
    mcGlobal = newMcGlobal;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__MC_GLOBAL, oldMcGlobal, newMcGlobal);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMcGlobal(MethodCallGlob newMcGlobal)
  {
    if (newMcGlobal != mcGlobal)
    {
      NotificationChain msgs = null;
      if (mcGlobal != null)
        msgs = ((InternalEObject)mcGlobal).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__MC_GLOBAL, null, msgs);
      if (newMcGlobal != null)
        msgs = ((InternalEObject)newMcGlobal).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__MC_GLOBAL, null, msgs);
      msgs = basicSetMcGlobal(newMcGlobal, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__MC_GLOBAL, newMcGlobal, newMcGlobal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExprArit getExpr()
  {
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr(ExprArit newExpr, NotificationChain msgs)
  {
    ExprArit oldExpr = expr;
    expr = newExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__EXPR, oldExpr, newExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpr(ExprArit newExpr)
  {
    if (newExpr != expr)
    {
      NotificationChain msgs = null;
      if (expr != null)
        msgs = ((InternalEObject)expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__EXPR, null, msgs);
      if (newExpr != null)
        msgs = ((InternalEObject)newExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__EXPR, null, msgs);
      msgs = basicSetExpr(newExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__EXPR, newExpr, newExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttribID getVAtr1()
  {
    return vAtr1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVAtr1(AttribID newVAtr1, NotificationChain msgs)
  {
    AttribID oldVAtr1 = vAtr1;
    vAtr1 = newVAtr1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__VATR1, oldVAtr1, newVAtr1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVAtr1(AttribID newVAtr1)
  {
    if (newVAtr1 != vAtr1)
    {
      NotificationChain msgs = null;
      if (vAtr1 != null)
        msgs = ((InternalEObject)vAtr1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__VATR1, null, msgs);
      if (newVAtr1 != null)
        msgs = ((InternalEObject)newVAtr1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR__VATR1, null, msgs);
      msgs = basicSetVAtr1(newVAtr1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR__VATR1, newVAtr1, newVAtr1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AttribID> getVAtr2()
  {
    if (vAtr2 == null)
    {
      vAtr2 = new EObjectContainmentEList<AttribID>(AttribID.class, this, CrossPlatformPackage.FATOR__VATR2);
    }
    return vAtr2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getCol()
  {
    if (col == null)
    {
      col = new EDataTypeEList<String>(String.class, this, CrossPlatformPackage.FATOR__COL);
    }
    return col;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExprL> getValue()
  {
    if (value == null)
    {
      value = new EObjectContainmentEList<ExprL>(ExprL.class, this, CrossPlatformPackage.FATOR__VALUE);
    }
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR__P:
        return basicSetP(null, msgs);
      case CrossPlatformPackage.FATOR__MC_OPERATION:
        return basicSetMcOperation(null, msgs);
      case CrossPlatformPackage.FATOR__MC_GLOBAL:
        return basicSetMcGlobal(null, msgs);
      case CrossPlatformPackage.FATOR__EXPR:
        return basicSetExpr(null, msgs);
      case CrossPlatformPackage.FATOR__VATR1:
        return basicSetVAtr1(null, msgs);
      case CrossPlatformPackage.FATOR__VATR2:
        return ((InternalEList<?>)getVAtr2()).basicRemove(otherEnd, msgs);
      case CrossPlatformPackage.FATOR__VALUE:
        return ((InternalEList<?>)getValue()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR__P:
        return getP();
      case CrossPlatformPackage.FATOR__V:
        return getV();
      case CrossPlatformPackage.FATOR__COL1:
        return getCol1();
      case CrossPlatformPackage.FATOR__ARRAY:
        return getArray();
      case CrossPlatformPackage.FATOR__ARRAY2:
        return getArray2();
      case CrossPlatformPackage.FATOR__COL2:
        return getCol2();
      case CrossPlatformPackage.FATOR__D:
        return getD();
      case CrossPlatformPackage.FATOR__STR_VAR:
        return getStrVar();
      case CrossPlatformPackage.FATOR__MC_OPERATION:
        return getMcOperation();
      case CrossPlatformPackage.FATOR__MC_GLOBAL:
        return getMcGlobal();
      case CrossPlatformPackage.FATOR__EXPR:
        return getExpr();
      case CrossPlatformPackage.FATOR__VATR1:
        return getVAtr1();
      case CrossPlatformPackage.FATOR__VATR2:
        return getVAtr2();
      case CrossPlatformPackage.FATOR__COL:
        return getCol();
      case CrossPlatformPackage.FATOR__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR__P:
        setP((Parameter)newValue);
        return;
      case CrossPlatformPackage.FATOR__V:
        setV((String)newValue);
        return;
      case CrossPlatformPackage.FATOR__COL1:
        setCol1((String)newValue);
        return;
      case CrossPlatformPackage.FATOR__ARRAY:
        setArray((Integer)newValue);
        return;
      case CrossPlatformPackage.FATOR__ARRAY2:
        setArray2((String)newValue);
        return;
      case CrossPlatformPackage.FATOR__COL2:
        setCol2((String)newValue);
        return;
      case CrossPlatformPackage.FATOR__D:
        setD((String)newValue);
        return;
      case CrossPlatformPackage.FATOR__STR_VAR:
        setStrVar((String)newValue);
        return;
      case CrossPlatformPackage.FATOR__MC_OPERATION:
        setMcOperation((MethodCallOp)newValue);
        return;
      case CrossPlatformPackage.FATOR__MC_GLOBAL:
        setMcGlobal((MethodCallGlob)newValue);
        return;
      case CrossPlatformPackage.FATOR__EXPR:
        setExpr((ExprArit)newValue);
        return;
      case CrossPlatformPackage.FATOR__VATR1:
        setVAtr1((AttribID)newValue);
        return;
      case CrossPlatformPackage.FATOR__VATR2:
        getVAtr2().clear();
        getVAtr2().addAll((Collection<? extends AttribID>)newValue);
        return;
      case CrossPlatformPackage.FATOR__COL:
        getCol().clear();
        getCol().addAll((Collection<? extends String>)newValue);
        return;
      case CrossPlatformPackage.FATOR__VALUE:
        getValue().clear();
        getValue().addAll((Collection<? extends ExprL>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR__P:
        setP((Parameter)null);
        return;
      case CrossPlatformPackage.FATOR__V:
        setV(V_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR__COL1:
        setCol1(COL1_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR__ARRAY:
        setArray(ARRAY_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR__ARRAY2:
        setArray2(ARRAY2_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR__COL2:
        setCol2(COL2_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR__D:
        setD(D_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR__STR_VAR:
        setStrVar(STR_VAR_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR__MC_OPERATION:
        setMcOperation((MethodCallOp)null);
        return;
      case CrossPlatformPackage.FATOR__MC_GLOBAL:
        setMcGlobal((MethodCallGlob)null);
        return;
      case CrossPlatformPackage.FATOR__EXPR:
        setExpr((ExprArit)null);
        return;
      case CrossPlatformPackage.FATOR__VATR1:
        setVAtr1((AttribID)null);
        return;
      case CrossPlatformPackage.FATOR__VATR2:
        getVAtr2().clear();
        return;
      case CrossPlatformPackage.FATOR__COL:
        getCol().clear();
        return;
      case CrossPlatformPackage.FATOR__VALUE:
        getValue().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR__P:
        return p != null;
      case CrossPlatformPackage.FATOR__V:
        return V_EDEFAULT == null ? v != null : !V_EDEFAULT.equals(v);
      case CrossPlatformPackage.FATOR__COL1:
        return COL1_EDEFAULT == null ? col1 != null : !COL1_EDEFAULT.equals(col1);
      case CrossPlatformPackage.FATOR__ARRAY:
        return array != ARRAY_EDEFAULT;
      case CrossPlatformPackage.FATOR__ARRAY2:
        return ARRAY2_EDEFAULT == null ? array2 != null : !ARRAY2_EDEFAULT.equals(array2);
      case CrossPlatformPackage.FATOR__COL2:
        return COL2_EDEFAULT == null ? col2 != null : !COL2_EDEFAULT.equals(col2);
      case CrossPlatformPackage.FATOR__D:
        return D_EDEFAULT == null ? d != null : !D_EDEFAULT.equals(d);
      case CrossPlatformPackage.FATOR__STR_VAR:
        return STR_VAR_EDEFAULT == null ? strVar != null : !STR_VAR_EDEFAULT.equals(strVar);
      case CrossPlatformPackage.FATOR__MC_OPERATION:
        return mcOperation != null;
      case CrossPlatformPackage.FATOR__MC_GLOBAL:
        return mcGlobal != null;
      case CrossPlatformPackage.FATOR__EXPR:
        return expr != null;
      case CrossPlatformPackage.FATOR__VATR1:
        return vAtr1 != null;
      case CrossPlatformPackage.FATOR__VATR2:
        return vAtr2 != null && !vAtr2.isEmpty();
      case CrossPlatformPackage.FATOR__COL:
        return col != null && !col.isEmpty();
      case CrossPlatformPackage.FATOR__VALUE:
        return value != null && !value.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (v: ");
    result.append(v);
    result.append(", col1: ");
    result.append(col1);
    result.append(", array: ");
    result.append(array);
    result.append(", array2: ");
    result.append(array2);
    result.append(", col2: ");
    result.append(col2);
    result.append(", d: ");
    result.append(d);
    result.append(", strVar: ");
    result.append(strVar);
    result.append(", col: ");
    result.append(col);
    result.append(')');
    return result.toString();
  }

} //FatorImpl
