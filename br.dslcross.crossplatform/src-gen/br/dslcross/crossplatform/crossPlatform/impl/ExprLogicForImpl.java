/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.AssignmentCmdFor;
import br.dslcross.crossplatform.crossPlatform.CommandOperation;
import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.ExprLogicFor;
import br.dslcross.crossplatform.crossPlatform.ExprLogica;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expr Logic For</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLogicForImpl#getInicio <em>Inicio</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLogicForImpl#getCondicao <em>Condicao</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.ExprLogicForImpl#getAbrevCmd <em>Abrev Cmd</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExprLogicForImpl extends MinimalEObjectImpl.Container implements ExprLogicFor
{
  /**
   * The cached value of the '{@link #getInicio() <em>Inicio</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInicio()
   * @generated
   * @ordered
   */
  protected AssignmentCmdFor inicio;

  /**
   * The cached value of the '{@link #getCondicao() <em>Condicao</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondicao()
   * @generated
   * @ordered
   */
  protected ExprLogica condicao;

  /**
   * The cached value of the '{@link #getAbrevCmd() <em>Abrev Cmd</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbrevCmd()
   * @generated
   * @ordered
   */
  protected CommandOperation abrevCmd;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExprLogicForImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.EXPR_LOGIC_FOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssignmentCmdFor getInicio()
  {
    return inicio;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInicio(AssignmentCmdFor newInicio, NotificationChain msgs)
  {
    AssignmentCmdFor oldInicio = inicio;
    inicio = newInicio;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO, oldInicio, newInicio);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInicio(AssignmentCmdFor newInicio)
  {
    if (newInicio != inicio)
    {
      NotificationChain msgs = null;
      if (inicio != null)
        msgs = ((InternalEObject)inicio).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO, null, msgs);
      if (newInicio != null)
        msgs = ((InternalEObject)newInicio).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO, null, msgs);
      msgs = basicSetInicio(newInicio, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO, newInicio, newInicio));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExprLogica getCondicao()
  {
    return condicao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondicao(ExprLogica newCondicao, NotificationChain msgs)
  {
    ExprLogica oldCondicao = condicao;
    condicao = newCondicao;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO, oldCondicao, newCondicao);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCondicao(ExprLogica newCondicao)
  {
    if (newCondicao != condicao)
    {
      NotificationChain msgs = null;
      if (condicao != null)
        msgs = ((InternalEObject)condicao).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO, null, msgs);
      if (newCondicao != null)
        msgs = ((InternalEObject)newCondicao).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO, null, msgs);
      msgs = basicSetCondicao(newCondicao, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO, newCondicao, newCondicao));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommandOperation getAbrevCmd()
  {
    return abrevCmd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAbrevCmd(CommandOperation newAbrevCmd, NotificationChain msgs)
  {
    CommandOperation oldAbrevCmd = abrevCmd;
    abrevCmd = newAbrevCmd;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD, oldAbrevCmd, newAbrevCmd);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAbrevCmd(CommandOperation newAbrevCmd)
  {
    if (newAbrevCmd != abrevCmd)
    {
      NotificationChain msgs = null;
      if (abrevCmd != null)
        msgs = ((InternalEObject)abrevCmd).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD, null, msgs);
      if (newAbrevCmd != null)
        msgs = ((InternalEObject)newAbrevCmd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD, null, msgs);
      msgs = basicSetAbrevCmd(newAbrevCmd, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD, newAbrevCmd, newAbrevCmd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO:
        return basicSetInicio(null, msgs);
      case CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO:
        return basicSetCondicao(null, msgs);
      case CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD:
        return basicSetAbrevCmd(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO:
        return getInicio();
      case CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO:
        return getCondicao();
      case CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD:
        return getAbrevCmd();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO:
        setInicio((AssignmentCmdFor)newValue);
        return;
      case CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO:
        setCondicao((ExprLogica)newValue);
        return;
      case CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD:
        setAbrevCmd((CommandOperation)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO:
        setInicio((AssignmentCmdFor)null);
        return;
      case CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO:
        setCondicao((ExprLogica)null);
        return;
      case CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD:
        setAbrevCmd((CommandOperation)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.EXPR_LOGIC_FOR__INICIO:
        return inicio != null;
      case CrossPlatformPackage.EXPR_LOGIC_FOR__CONDICAO:
        return condicao != null;
      case CrossPlatformPackage.EXPR_LOGIC_FOR__ABREV_CMD:
        return abrevCmd != null;
    }
    return super.eIsSet(featureID);
  }

} //ExprLogicForImpl
