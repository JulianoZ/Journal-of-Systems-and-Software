/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.Attribute;
import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.ExprL;
import br.dslcross.crossplatform.crossPlatform.ExprLogica;
import br.dslcross.crossplatform.crossPlatform.FatorLogico;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fator Logico</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorLogicoImpl#getN <em>N</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorLogicoImpl#getV <em>V</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorLogicoImpl#getOp1 <em>Op1</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorLogicoImpl#getOp2 <em>Op2</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorLogicoImpl#getExprLog <em>Expr Log</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorLogicoImpl#getExpr1 <em>Expr1</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorLogicoImpl#getOpRel <em>Op Rel</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.FatorLogicoImpl#getExpr2 <em>Expr2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FatorLogicoImpl extends MinimalEObjectImpl.Container implements FatorLogico
{
  /**
   * The default value of the '{@link #getN() <em>N</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN()
   * @generated
   * @ordered
   */
  protected static final String N_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getN() <em>N</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN()
   * @generated
   * @ordered
   */
  protected String n = N_EDEFAULT;

  /**
   * The cached value of the '{@link #getV() <em>V</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getV()
   * @generated
   * @ordered
   */
  protected Attribute v;

  /**
   * The default value of the '{@link #getOp1() <em>Op1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp1()
   * @generated
   * @ordered
   */
  protected static final String OP1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp1() <em>Op1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp1()
   * @generated
   * @ordered
   */
  protected String op1 = OP1_EDEFAULT;

  /**
   * The default value of the '{@link #getOp2() <em>Op2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp2()
   * @generated
   * @ordered
   */
  protected static final String OP2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp2() <em>Op2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp2()
   * @generated
   * @ordered
   */
  protected String op2 = OP2_EDEFAULT;

  /**
   * The cached value of the '{@link #getExprLog() <em>Expr Log</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprLog()
   * @generated
   * @ordered
   */
  protected ExprLogica exprLog;

  /**
   * The cached value of the '{@link #getExpr1() <em>Expr1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr1()
   * @generated
   * @ordered
   */
  protected ExprL expr1;

  /**
   * The default value of the '{@link #getOpRel() <em>Op Rel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpRel()
   * @generated
   * @ordered
   */
  protected static final String OP_REL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOpRel() <em>Op Rel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpRel()
   * @generated
   * @ordered
   */
  protected String opRel = OP_REL_EDEFAULT;

  /**
   * The cached value of the '{@link #getExpr2() <em>Expr2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr2()
   * @generated
   * @ordered
   */
  protected ExprL expr2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FatorLogicoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.FATOR_LOGICO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getN()
  {
    return n;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setN(String newN)
  {
    String oldN = n;
    n = newN;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__N, oldN, n));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Attribute getV()
  {
    if (v != null && v.eIsProxy())
    {
      InternalEObject oldV = (InternalEObject)v;
      v = (Attribute)eResolveProxy(oldV);
      if (v != oldV)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CrossPlatformPackage.FATOR_LOGICO__V, oldV, v));
      }
    }
    return v;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute basicGetV()
  {
    return v;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setV(Attribute newV)
  {
    Attribute oldV = v;
    v = newV;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__V, oldV, v));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOp1()
  {
    return op1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOp1(String newOp1)
  {
    String oldOp1 = op1;
    op1 = newOp1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__OP1, oldOp1, op1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOp2()
  {
    return op2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOp2(String newOp2)
  {
    String oldOp2 = op2;
    op2 = newOp2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__OP2, oldOp2, op2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExprLogica getExprLog()
  {
    return exprLog;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExprLog(ExprLogica newExprLog, NotificationChain msgs)
  {
    ExprLogica oldExprLog = exprLog;
    exprLog = newExprLog;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG, oldExprLog, newExprLog);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExprLog(ExprLogica newExprLog)
  {
    if (newExprLog != exprLog)
    {
      NotificationChain msgs = null;
      if (exprLog != null)
        msgs = ((InternalEObject)exprLog).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG, null, msgs);
      if (newExprLog != null)
        msgs = ((InternalEObject)newExprLog).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG, null, msgs);
      msgs = basicSetExprLog(newExprLog, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG, newExprLog, newExprLog));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExprL getExpr1()
  {
    return expr1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr1(ExprL newExpr1, NotificationChain msgs)
  {
    ExprL oldExpr1 = expr1;
    expr1 = newExpr1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__EXPR1, oldExpr1, newExpr1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpr1(ExprL newExpr1)
  {
    if (newExpr1 != expr1)
    {
      NotificationChain msgs = null;
      if (expr1 != null)
        msgs = ((InternalEObject)expr1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR_LOGICO__EXPR1, null, msgs);
      if (newExpr1 != null)
        msgs = ((InternalEObject)newExpr1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR_LOGICO__EXPR1, null, msgs);
      msgs = basicSetExpr1(newExpr1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__EXPR1, newExpr1, newExpr1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOpRel()
  {
    return opRel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOpRel(String newOpRel)
  {
    String oldOpRel = opRel;
    opRel = newOpRel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__OP_REL, oldOpRel, opRel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExprL getExpr2()
  {
    return expr2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr2(ExprL newExpr2, NotificationChain msgs)
  {
    ExprL oldExpr2 = expr2;
    expr2 = newExpr2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__EXPR2, oldExpr2, newExpr2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpr2(ExprL newExpr2)
  {
    if (newExpr2 != expr2)
    {
      NotificationChain msgs = null;
      if (expr2 != null)
        msgs = ((InternalEObject)expr2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR_LOGICO__EXPR2, null, msgs);
      if (newExpr2 != null)
        msgs = ((InternalEObject)newExpr2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.FATOR_LOGICO__EXPR2, null, msgs);
      msgs = basicSetExpr2(newExpr2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.FATOR_LOGICO__EXPR2, newExpr2, newExpr2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG:
        return basicSetExprLog(null, msgs);
      case CrossPlatformPackage.FATOR_LOGICO__EXPR1:
        return basicSetExpr1(null, msgs);
      case CrossPlatformPackage.FATOR_LOGICO__EXPR2:
        return basicSetExpr2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR_LOGICO__N:
        return getN();
      case CrossPlatformPackage.FATOR_LOGICO__V:
        if (resolve) return getV();
        return basicGetV();
      case CrossPlatformPackage.FATOR_LOGICO__OP1:
        return getOp1();
      case CrossPlatformPackage.FATOR_LOGICO__OP2:
        return getOp2();
      case CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG:
        return getExprLog();
      case CrossPlatformPackage.FATOR_LOGICO__EXPR1:
        return getExpr1();
      case CrossPlatformPackage.FATOR_LOGICO__OP_REL:
        return getOpRel();
      case CrossPlatformPackage.FATOR_LOGICO__EXPR2:
        return getExpr2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR_LOGICO__N:
        setN((String)newValue);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__V:
        setV((Attribute)newValue);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__OP1:
        setOp1((String)newValue);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__OP2:
        setOp2((String)newValue);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG:
        setExprLog((ExprLogica)newValue);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__EXPR1:
        setExpr1((ExprL)newValue);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__OP_REL:
        setOpRel((String)newValue);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__EXPR2:
        setExpr2((ExprL)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR_LOGICO__N:
        setN(N_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__V:
        setV((Attribute)null);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__OP1:
        setOp1(OP1_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__OP2:
        setOp2(OP2_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG:
        setExprLog((ExprLogica)null);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__EXPR1:
        setExpr1((ExprL)null);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__OP_REL:
        setOpRel(OP_REL_EDEFAULT);
        return;
      case CrossPlatformPackage.FATOR_LOGICO__EXPR2:
        setExpr2((ExprL)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.FATOR_LOGICO__N:
        return N_EDEFAULT == null ? n != null : !N_EDEFAULT.equals(n);
      case CrossPlatformPackage.FATOR_LOGICO__V:
        return v != null;
      case CrossPlatformPackage.FATOR_LOGICO__OP1:
        return OP1_EDEFAULT == null ? op1 != null : !OP1_EDEFAULT.equals(op1);
      case CrossPlatformPackage.FATOR_LOGICO__OP2:
        return OP2_EDEFAULT == null ? op2 != null : !OP2_EDEFAULT.equals(op2);
      case CrossPlatformPackage.FATOR_LOGICO__EXPR_LOG:
        return exprLog != null;
      case CrossPlatformPackage.FATOR_LOGICO__EXPR1:
        return expr1 != null;
      case CrossPlatformPackage.FATOR_LOGICO__OP_REL:
        return OP_REL_EDEFAULT == null ? opRel != null : !OP_REL_EDEFAULT.equals(opRel);
      case CrossPlatformPackage.FATOR_LOGICO__EXPR2:
        return expr2 != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (n: ");
    result.append(n);
    result.append(", op1: ");
    result.append(op1);
    result.append(", op2: ");
    result.append(op2);
    result.append(", OpRel: ");
    result.append(opRel);
    result.append(')');
    return result.toString();
  }

} //FatorLogicoImpl
