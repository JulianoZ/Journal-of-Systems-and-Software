/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.CommandOperation;
import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.DSLGenericType;
import br.dslcross.crossplatform.crossPlatform.EntityGlobal;
import br.dslcross.crossplatform.crossPlatform.GlobalEntity;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity Global</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.EntityGlobalImpl#getGenericTypes <em>Generic Types</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.EntityGlobalImpl#getOpGlobal <em>Op Global</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.EntityGlobalImpl#getCmdList <em>Cmd List</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntityGlobalImpl extends CommandPlatImpl implements EntityGlobal
{
  /**
   * The cached value of the '{@link #getGenericTypes() <em>Generic Types</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGenericTypes()
   * @generated
   * @ordered
   */
  protected EList<DSLGenericType> genericTypes;

  /**
   * The cached value of the '{@link #getOpGlobal() <em>Op Global</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOpGlobal()
   * @generated
   * @ordered
   */
  protected GlobalEntity opGlobal;

  /**
   * The cached value of the '{@link #getCmdList() <em>Cmd List</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCmdList()
   * @generated
   * @ordered
   */
  protected EList<CommandOperation> cmdList;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntityGlobalImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.ENTITY_GLOBAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DSLGenericType> getGenericTypes()
  {
    if (genericTypes == null)
    {
      genericTypes = new EObjectContainmentEList<DSLGenericType>(DSLGenericType.class, this, CrossPlatformPackage.ENTITY_GLOBAL__GENERIC_TYPES);
    }
    return genericTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GlobalEntity getOpGlobal()
  {
    if (opGlobal != null && opGlobal.eIsProxy())
    {
      InternalEObject oldOpGlobal = (InternalEObject)opGlobal;
      opGlobal = (GlobalEntity)eResolveProxy(oldOpGlobal);
      if (opGlobal != oldOpGlobal)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CrossPlatformPackage.ENTITY_GLOBAL__OP_GLOBAL, oldOpGlobal, opGlobal));
      }
    }
    return opGlobal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GlobalEntity basicGetOpGlobal()
  {
    return opGlobal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOpGlobal(GlobalEntity newOpGlobal)
  {
    GlobalEntity oldOpGlobal = opGlobal;
    opGlobal = newOpGlobal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.ENTITY_GLOBAL__OP_GLOBAL, oldOpGlobal, opGlobal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CommandOperation> getCmdList()
  {
    if (cmdList == null)
    {
      cmdList = new EObjectContainmentEList<CommandOperation>(CommandOperation.class, this, CrossPlatformPackage.ENTITY_GLOBAL__CMD_LIST);
    }
    return cmdList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ENTITY_GLOBAL__GENERIC_TYPES:
        return ((InternalEList<?>)getGenericTypes()).basicRemove(otherEnd, msgs);
      case CrossPlatformPackage.ENTITY_GLOBAL__CMD_LIST:
        return ((InternalEList<?>)getCmdList()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ENTITY_GLOBAL__GENERIC_TYPES:
        return getGenericTypes();
      case CrossPlatformPackage.ENTITY_GLOBAL__OP_GLOBAL:
        if (resolve) return getOpGlobal();
        return basicGetOpGlobal();
      case CrossPlatformPackage.ENTITY_GLOBAL__CMD_LIST:
        return getCmdList();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ENTITY_GLOBAL__GENERIC_TYPES:
        getGenericTypes().clear();
        getGenericTypes().addAll((Collection<? extends DSLGenericType>)newValue);
        return;
      case CrossPlatformPackage.ENTITY_GLOBAL__OP_GLOBAL:
        setOpGlobal((GlobalEntity)newValue);
        return;
      case CrossPlatformPackage.ENTITY_GLOBAL__CMD_LIST:
        getCmdList().clear();
        getCmdList().addAll((Collection<? extends CommandOperation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ENTITY_GLOBAL__GENERIC_TYPES:
        getGenericTypes().clear();
        return;
      case CrossPlatformPackage.ENTITY_GLOBAL__OP_GLOBAL:
        setOpGlobal((GlobalEntity)null);
        return;
      case CrossPlatformPackage.ENTITY_GLOBAL__CMD_LIST:
        getCmdList().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ENTITY_GLOBAL__GENERIC_TYPES:
        return genericTypes != null && !genericTypes.isEmpty();
      case CrossPlatformPackage.ENTITY_GLOBAL__OP_GLOBAL:
        return opGlobal != null;
      case CrossPlatformPackage.ENTITY_GLOBAL__CMD_LIST:
        return cmdList != null && !cmdList.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //EntityGlobalImpl
