/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.Entity;
import br.dslcross.crossplatform.crossPlatform.EntityEsp;
import br.dslcross.crossplatform.crossPlatform.Platform;
import br.dslcross.crossplatform.crossPlatform.PlatformDecl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Platform</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.PlatformImpl#getEnt <em>Ent</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.PlatformImpl#getPlat <em>Plat</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.PlatformImpl#getCommunication <em>Communication</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.PlatformImpl#getEntityEspecification <em>Entity Especification</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PlatformImpl extends MinimalEObjectImpl.Container implements Platform
{
  /**
   * The cached value of the '{@link #getEnt() <em>Ent</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnt()
   * @generated
   * @ordered
   */
  protected Entity ent;

  /**
   * The cached value of the '{@link #getPlat() <em>Plat</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlat()
   * @generated
   * @ordered
   */
  protected PlatformDecl plat;

  /**
   * The default value of the '{@link #getCommunication() <em>Communication</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommunication()
   * @generated
   * @ordered
   */
  protected static final String COMMUNICATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCommunication() <em>Communication</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommunication()
   * @generated
   * @ordered
   */
  protected String communication = COMMUNICATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntityEspecification() <em>Entity Especification</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntityEspecification()
   * @generated
   * @ordered
   */
  protected EntityEsp entityEspecification;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PlatformImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.PLATFORM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity getEnt()
  {
    if (ent != null && ent.eIsProxy())
    {
      InternalEObject oldEnt = (InternalEObject)ent;
      ent = (Entity)eResolveProxy(oldEnt);
      if (ent != oldEnt)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CrossPlatformPackage.PLATFORM__ENT, oldEnt, ent));
      }
    }
    return ent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity basicGetEnt()
  {
    return ent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnt(Entity newEnt)
  {
    Entity oldEnt = ent;
    ent = newEnt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.PLATFORM__ENT, oldEnt, ent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PlatformDecl getPlat()
  {
    if (plat != null && plat.eIsProxy())
    {
      InternalEObject oldPlat = (InternalEObject)plat;
      plat = (PlatformDecl)eResolveProxy(oldPlat);
      if (plat != oldPlat)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CrossPlatformPackage.PLATFORM__PLAT, oldPlat, plat));
      }
    }
    return plat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PlatformDecl basicGetPlat()
  {
    return plat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPlat(PlatformDecl newPlat)
  {
    PlatformDecl oldPlat = plat;
    plat = newPlat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.PLATFORM__PLAT, oldPlat, plat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCommunication()
  {
    return communication;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCommunication(String newCommunication)
  {
    String oldCommunication = communication;
    communication = newCommunication;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.PLATFORM__COMMUNICATION, oldCommunication, communication));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityEsp getEntityEspecification()
  {
    return entityEspecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEntityEspecification(EntityEsp newEntityEspecification, NotificationChain msgs)
  {
    EntityEsp oldEntityEspecification = entityEspecification;
    entityEspecification = newEntityEspecification;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION, oldEntityEspecification, newEntityEspecification);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntityEspecification(EntityEsp newEntityEspecification)
  {
    if (newEntityEspecification != entityEspecification)
    {
      NotificationChain msgs = null;
      if (entityEspecification != null)
        msgs = ((InternalEObject)entityEspecification).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION, null, msgs);
      if (newEntityEspecification != null)
        msgs = ((InternalEObject)newEntityEspecification).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION, null, msgs);
      msgs = basicSetEntityEspecification(newEntityEspecification, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION, newEntityEspecification, newEntityEspecification));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION:
        return basicSetEntityEspecification(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.PLATFORM__ENT:
        if (resolve) return getEnt();
        return basicGetEnt();
      case CrossPlatformPackage.PLATFORM__PLAT:
        if (resolve) return getPlat();
        return basicGetPlat();
      case CrossPlatformPackage.PLATFORM__COMMUNICATION:
        return getCommunication();
      case CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION:
        return getEntityEspecification();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.PLATFORM__ENT:
        setEnt((Entity)newValue);
        return;
      case CrossPlatformPackage.PLATFORM__PLAT:
        setPlat((PlatformDecl)newValue);
        return;
      case CrossPlatformPackage.PLATFORM__COMMUNICATION:
        setCommunication((String)newValue);
        return;
      case CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION:
        setEntityEspecification((EntityEsp)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.PLATFORM__ENT:
        setEnt((Entity)null);
        return;
      case CrossPlatformPackage.PLATFORM__PLAT:
        setPlat((PlatformDecl)null);
        return;
      case CrossPlatformPackage.PLATFORM__COMMUNICATION:
        setCommunication(COMMUNICATION_EDEFAULT);
        return;
      case CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION:
        setEntityEspecification((EntityEsp)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.PLATFORM__ENT:
        return ent != null;
      case CrossPlatformPackage.PLATFORM__PLAT:
        return plat != null;
      case CrossPlatformPackage.PLATFORM__COMMUNICATION:
        return COMMUNICATION_EDEFAULT == null ? communication != null : !COMMUNICATION_EDEFAULT.equals(communication);
      case CrossPlatformPackage.PLATFORM__ENTITY_ESPECIFICATION:
        return entityEspecification != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Communication: ");
    result.append(communication);
    result.append(')');
    return result.toString();
  }

} //PlatformImpl
