/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.AttribID;
import br.dslcross.crossplatform.crossPlatform.AttributeCall;
import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.ExprL;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Attribute Call</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.AttributeCallImpl#getName <em>Name</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.AttributeCallImpl#getCol1 <em>Col1</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.AttributeCallImpl#getArray <em>Array</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.AttributeCallImpl#getCol2 <em>Col2</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.AttributeCallImpl#getVAtr2 <em>VAtr2</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.AttributeCallImpl#getCol <em>Col</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.AttributeCallImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AttributeCallImpl extends MinimalEObjectImpl.Container implements AttributeCall
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getCol1() <em>Col1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol1()
   * @generated
   * @ordered
   */
  protected static final String COL1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCol1() <em>Col1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol1()
   * @generated
   * @ordered
   */
  protected String col1 = COL1_EDEFAULT;

  /**
   * The default value of the '{@link #getArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected static final int ARRAY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected int array = ARRAY_EDEFAULT;

  /**
   * The default value of the '{@link #getCol2() <em>Col2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol2()
   * @generated
   * @ordered
   */
  protected static final String COL2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCol2() <em>Col2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol2()
   * @generated
   * @ordered
   */
  protected String col2 = COL2_EDEFAULT;

  /**
   * The cached value of the '{@link #getVAtr2() <em>VAtr2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVAtr2()
   * @generated
   * @ordered
   */
  protected EList<AttribID> vAtr2;

  /**
   * The cached value of the '{@link #getCol() <em>Col</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol()
   * @generated
   * @ordered
   */
  protected EList<String> col;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected EList<ExprL> value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AttributeCallImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.ATTRIBUTE_CALL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.ATTRIBUTE_CALL__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCol1()
  {
    return col1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCol1(String newCol1)
  {
    String oldCol1 = col1;
    col1 = newCol1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.ATTRIBUTE_CALL__COL1, oldCol1, col1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getArray()
  {
    return array;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArray(int newArray)
  {
    int oldArray = array;
    array = newArray;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.ATTRIBUTE_CALL__ARRAY, oldArray, array));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCol2()
  {
    return col2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCol2(String newCol2)
  {
    String oldCol2 = col2;
    col2 = newCol2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.ATTRIBUTE_CALL__COL2, oldCol2, col2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AttribID> getVAtr2()
  {
    if (vAtr2 == null)
    {
      vAtr2 = new EObjectContainmentEList<AttribID>(AttribID.class, this, CrossPlatformPackage.ATTRIBUTE_CALL__VATR2);
    }
    return vAtr2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getCol()
  {
    if (col == null)
    {
      col = new EDataTypeEList<String>(String.class, this, CrossPlatformPackage.ATTRIBUTE_CALL__COL);
    }
    return col;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExprL> getValue()
  {
    if (value == null)
    {
      value = new EObjectContainmentEList<ExprL>(ExprL.class, this, CrossPlatformPackage.ATTRIBUTE_CALL__VALUE);
    }
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ATTRIBUTE_CALL__VATR2:
        return ((InternalEList<?>)getVAtr2()).basicRemove(otherEnd, msgs);
      case CrossPlatformPackage.ATTRIBUTE_CALL__VALUE:
        return ((InternalEList<?>)getValue()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ATTRIBUTE_CALL__NAME:
        return getName();
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL1:
        return getCol1();
      case CrossPlatformPackage.ATTRIBUTE_CALL__ARRAY:
        return getArray();
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL2:
        return getCol2();
      case CrossPlatformPackage.ATTRIBUTE_CALL__VATR2:
        return getVAtr2();
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL:
        return getCol();
      case CrossPlatformPackage.ATTRIBUTE_CALL__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ATTRIBUTE_CALL__NAME:
        setName((String)newValue);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL1:
        setCol1((String)newValue);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__ARRAY:
        setArray((Integer)newValue);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL2:
        setCol2((String)newValue);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__VATR2:
        getVAtr2().clear();
        getVAtr2().addAll((Collection<? extends AttribID>)newValue);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL:
        getCol().clear();
        getCol().addAll((Collection<? extends String>)newValue);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__VALUE:
        getValue().clear();
        getValue().addAll((Collection<? extends ExprL>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ATTRIBUTE_CALL__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL1:
        setCol1(COL1_EDEFAULT);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__ARRAY:
        setArray(ARRAY_EDEFAULT);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL2:
        setCol2(COL2_EDEFAULT);
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__VATR2:
        getVAtr2().clear();
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL:
        getCol().clear();
        return;
      case CrossPlatformPackage.ATTRIBUTE_CALL__VALUE:
        getValue().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.ATTRIBUTE_CALL__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL1:
        return COL1_EDEFAULT == null ? col1 != null : !COL1_EDEFAULT.equals(col1);
      case CrossPlatformPackage.ATTRIBUTE_CALL__ARRAY:
        return array != ARRAY_EDEFAULT;
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL2:
        return COL2_EDEFAULT == null ? col2 != null : !COL2_EDEFAULT.equals(col2);
      case CrossPlatformPackage.ATTRIBUTE_CALL__VATR2:
        return vAtr2 != null && !vAtr2.isEmpty();
      case CrossPlatformPackage.ATTRIBUTE_CALL__COL:
        return col != null && !col.isEmpty();
      case CrossPlatformPackage.ATTRIBUTE_CALL__VALUE:
        return value != null && !value.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", col1: ");
    result.append(col1);
    result.append(", array: ");
    result.append(array);
    result.append(", col2: ");
    result.append(col2);
    result.append(", col: ");
    result.append(col);
    result.append(')');
    return result.toString();
  }

} //AttributeCallImpl
