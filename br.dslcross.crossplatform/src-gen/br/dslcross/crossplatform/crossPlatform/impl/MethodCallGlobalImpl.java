/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.MethodCallGlob;
import br.dslcross.crossplatform.crossPlatform.MethodCallGlobal;
import br.dslcross.crossplatform.crossPlatform.MethodCallOp;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Method Call Global</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.MethodCallGlobalImpl#getCall1 <em>Call1</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.MethodCallGlobalImpl#getCall2 <em>Call2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MethodCallGlobalImpl extends CommandOperationImpl implements MethodCallGlobal
{
  /**
   * The cached value of the '{@link #getCall1() <em>Call1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCall1()
   * @generated
   * @ordered
   */
  protected MethodCallGlob call1;

  /**
   * The cached value of the '{@link #getCall2() <em>Call2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCall2()
   * @generated
   * @ordered
   */
  protected MethodCallOp call2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MethodCallGlobalImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.METHOD_CALL_GLOBAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodCallGlob getCall1()
  {
    return call1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCall1(MethodCallGlob newCall1, NotificationChain msgs)
  {
    MethodCallGlob oldCall1 = call1;
    call1 = newCall1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1, oldCall1, newCall1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCall1(MethodCallGlob newCall1)
  {
    if (newCall1 != call1)
    {
      NotificationChain msgs = null;
      if (call1 != null)
        msgs = ((InternalEObject)call1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1, null, msgs);
      if (newCall1 != null)
        msgs = ((InternalEObject)newCall1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1, null, msgs);
      msgs = basicSetCall1(newCall1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1, newCall1, newCall1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodCallOp getCall2()
  {
    return call2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCall2(MethodCallOp newCall2, NotificationChain msgs)
  {
    MethodCallOp oldCall2 = call2;
    call2 = newCall2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2, oldCall2, newCall2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCall2(MethodCallOp newCall2)
  {
    if (newCall2 != call2)
    {
      NotificationChain msgs = null;
      if (call2 != null)
        msgs = ((InternalEObject)call2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2, null, msgs);
      if (newCall2 != null)
        msgs = ((InternalEObject)newCall2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2, null, msgs);
      msgs = basicSetCall2(newCall2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2, newCall2, newCall2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1:
        return basicSetCall1(null, msgs);
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2:
        return basicSetCall2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1:
        return getCall1();
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2:
        return getCall2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1:
        setCall1((MethodCallGlob)newValue);
        return;
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2:
        setCall2((MethodCallOp)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1:
        setCall1((MethodCallGlob)null);
        return;
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2:
        setCall2((MethodCallOp)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL1:
        return call1 != null;
      case CrossPlatformPackage.METHOD_CALL_GLOBAL__CALL2:
        return call2 != null;
    }
    return super.eIsSet(featureID);
  }

} //MethodCallGlobalImpl
