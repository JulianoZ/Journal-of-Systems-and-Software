/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform.impl;

import br.dslcross.crossplatform.crossPlatform.CommandOperation;
import br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage;
import br.dslcross.crossplatform.crossPlatform.ExprLogicFor;
import br.dslcross.crossplatform.crossPlatform.OpLogicoFor;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Op Logico For</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.OpLogicoForImpl#getExprLogic <em>Expr Logic</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.impl.OpLogicoForImpl#getCmdList <em>Cmd List</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OpLogicoForImpl extends CommandOperationImpl implements OpLogicoFor
{
  /**
   * The cached value of the '{@link #getExprLogic() <em>Expr Logic</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprLogic()
   * @generated
   * @ordered
   */
  protected ExprLogicFor exprLogic;

  /**
   * The cached value of the '{@link #getCmdList() <em>Cmd List</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCmdList()
   * @generated
   * @ordered
   */
  protected EList<CommandOperation> cmdList;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OpLogicoForImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CrossPlatformPackage.Literals.OP_LOGICO_FOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExprLogicFor getExprLogic()
  {
    return exprLogic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExprLogic(ExprLogicFor newExprLogic, NotificationChain msgs)
  {
    ExprLogicFor oldExprLogic = exprLogic;
    exprLogic = newExprLogic;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC, oldExprLogic, newExprLogic);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExprLogic(ExprLogicFor newExprLogic)
  {
    if (newExprLogic != exprLogic)
    {
      NotificationChain msgs = null;
      if (exprLogic != null)
        msgs = ((InternalEObject)exprLogic).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC, null, msgs);
      if (newExprLogic != null)
        msgs = ((InternalEObject)newExprLogic).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC, null, msgs);
      msgs = basicSetExprLogic(newExprLogic, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC, newExprLogic, newExprLogic));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CommandOperation> getCmdList()
  {
    if (cmdList == null)
    {
      cmdList = new EObjectContainmentEList<CommandOperation>(CommandOperation.class, this, CrossPlatformPackage.OP_LOGICO_FOR__CMD_LIST);
    }
    return cmdList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC:
        return basicSetExprLogic(null, msgs);
      case CrossPlatformPackage.OP_LOGICO_FOR__CMD_LIST:
        return ((InternalEList<?>)getCmdList()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC:
        return getExprLogic();
      case CrossPlatformPackage.OP_LOGICO_FOR__CMD_LIST:
        return getCmdList();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC:
        setExprLogic((ExprLogicFor)newValue);
        return;
      case CrossPlatformPackage.OP_LOGICO_FOR__CMD_LIST:
        getCmdList().clear();
        getCmdList().addAll((Collection<? extends CommandOperation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC:
        setExprLogic((ExprLogicFor)null);
        return;
      case CrossPlatformPackage.OP_LOGICO_FOR__CMD_LIST:
        getCmdList().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CrossPlatformPackage.OP_LOGICO_FOR__EXPR_LOGIC:
        return exprLogic != null;
      case CrossPlatformPackage.OP_LOGICO_FOR__CMD_LIST:
        return cmdList != null && !cmdList.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //OpLogicoForImpl
