/**
 * generated by Xtext 2.24.0
 */
package br.dslcross.crossplatform.crossPlatform;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Op Logico For</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.OpLogicoFor#getExprLogic <em>Expr Logic</em>}</li>
 *   <li>{@link br.dslcross.crossplatform.crossPlatform.OpLogicoFor#getCmdList <em>Cmd List</em>}</li>
 * </ul>
 *
 * @see br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage#getOpLogicoFor()
 * @model
 * @generated
 */
public interface OpLogicoFor extends CommandOperation
{
  /**
   * Returns the value of the '<em><b>Expr Logic</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expr Logic</em>' containment reference.
   * @see #setExprLogic(ExprLogicFor)
   * @see br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage#getOpLogicoFor_ExprLogic()
   * @model containment="true"
   * @generated
   */
  ExprLogicFor getExprLogic();

  /**
   * Sets the value of the '{@link br.dslcross.crossplatform.crossPlatform.OpLogicoFor#getExprLogic <em>Expr Logic</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expr Logic</em>' containment reference.
   * @see #getExprLogic()
   * @generated
   */
  void setExprLogic(ExprLogicFor value);

  /**
   * Returns the value of the '<em><b>Cmd List</b></em>' containment reference list.
   * The list contents are of type {@link br.dslcross.crossplatform.crossPlatform.CommandOperation}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cmd List</em>' containment reference list.
   * @see br.dslcross.crossplatform.crossPlatform.CrossPlatformPackage#getOpLogicoFor_CmdList()
   * @model containment="true"
   * @generated
   */
  EList<CommandOperation> getCmdList();

} // OpLogicoFor
